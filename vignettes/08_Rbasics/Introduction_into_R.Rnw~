%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Latex Beamer Slide Presentation %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% (1) Beamer installation
% Download the following 3 packages from 
%       http://sourceforge.net/project/showfiles.php?group_id=92412
% and save them in texmf tree of your home directory like this
% (a) latex-beamer goes in      ~/texmf/tex/latex/beamer 
% (b) pgf goes in               ~/texmf/tex/latex/pgf 
% (c) xcolor goes in            ~/texmf/tex/latex/xcolor

% (2) Beamer usage
% Manual for Beamer and Prosper: http://latex.perseguers.ch/contrib/presentations/guidelines.pdf
% Great quick start: http://www.math.umbc.edu/~rouben/beamer/quickstart.html 
% Examples: http://latex-beamer.sourceforge.net/ 
% Example: http://www-verimag.imag.fr/~lmorel/html/beamer.html
% Manual: /home/tgirke/texmf/tex/latex/beamer/latex-beamer-3.06/doc/beameruserguide.pdf
% Print handouts: cp myslides.pdf zzz.pdf; pdftops -expand zzz.pdf; psnup -4 -b6mm -f zzz.ps > zzzhandouts.ps; ps2pdf zzzhandouts.ps
% generate PDF slide show with command:
% pdflatex Introduction_into_R.tex; bibtex Introduction_into_R; pdflatex Introduction_into_R.tex
% echo 'Sweave("Introduction_into_R.Rnw")' | R --slave; echo 'Stangle("Introduction_into_R.Rnw")' | R --slave; pdflatex Introduction_into_R.tex; bibtex Introduction_into_R; pdflatex Introduction_into_R.tex

\documentclass{beamer}
% Load a theme (graphics, colors,...) for the presentation
%\usepackage{beamerthemelined}
%\usepackage{beamerthemetree}
%\usetheme{default}
\usetheme{umbc2}
%\usepackage{beamerthemeclassic}

% Use UMBC theme collection. Download theme from: http://www.math.umbc.edu/~rouben/beamer/beamer-umbc.tar.gz
\useoutertheme{umbcfootline} 
% Define footnote line, see details: http://www.math.umbc.edu/~rouben/beamer/quickstart-Z-H-9.html#node_sec_9
\setfootline{\inserttitle \hfill \textit{\insertsection} \hfill \textit{\insertsubsection} \hfill Slide \insertframenumber/\inserttotalframenumber}

% Package for colored tables
\usepackage{colortbl}

% For wrapping long URLs properly (may not be necessary)
\usepackage{url}

% load texshade library; requires texshade.sty in pwd or /home/user/texmf/tex/latex
\usepackage{texshade}

% BibTex Settings
\usepackage{natbib}
\renewcommand\refname{Bibliography} % Defines title of bibliography   

\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textit{#1}}}
\newcommand{\Rmethod}[1]{{\texttt{#1}}}
\newcommand{\Rfunarg}[1]{{\texttt{#1}}}
\newcommand{\Rclass}[1]{{\textit{#1}}}

% Sweave settings
\SweaveOpts{echo=FALSE}
\usepackage{listings}

\hypersetup{pdfpagemode=FullScreen}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\title{Introduction to R}
\subtitle{A Short Overview}
\author{Thomas Girke}
\date{April 9, 2015}

\begin{document}
\frame{\titlepage}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Creates Separate Outline Slide at Beginning
%\section{Outline}
\frame{\scriptsize \tableofcontents}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Define to generate outline slide automatically at start of every new section
\AtBeginSection[]
{
   \begin{frame}
       \frametitle{Outline}
	\scriptsize
       \tableofcontents[currentsection]
   \end{frame}
}
% Same effect at subsection level
\AtBeginSubsection[]
{
   \begin{frame}
       \frametitle{Outline}
       \tableofcontents[currentsection,currentsubsection]
   \end{frame}
}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% slide %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Introduction}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Look and Feel of the R Environment}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}
	\frametitle{Why Using R?}
\vspace{0cm}
\footnotesize 
\begin{itemize}
	\item Complete statistical package and programming language
	\item Efficient functions and data structures for data analysis
	\item Powerful graphics
	\item Access to fast growing number of analysis packages
	\item Most widely used language in bioinformatics
	\item Is standard for data mining and biostatistical analysis
	\item Technical advantages: free, open-source, available for all OSs
\end{itemize}
\vspace{0.5cm} 
Books \& Documentation
\begin{itemize}
	\item simpleR - Using R for Introductory Statistics (John Verzani, 2004) \href{http://cran.r-project.org/doc/contrib/Verzani-SimpleR.pdf}{{\beamerbutton{Link}}}
	\item Bioinformatics and Computational Biology Solutions Using R and Bioconductor (Gentleman et al., 2005) \href{http://www.bioconductor.org/help/publications/books/bioinformatics-and-computational-biology-solutions/}{{\beamerbutton{Link}}}
	\item More on this see "Finding Help" section in UCR Manual \href{http://manuals.bioinformatics.ucr.edu/home/R\_BioCondManual\#TOC-Finding-Help}{{\beamerbutton{Link}}}
\end{itemize}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}
	\frametitle{What You'll Get?}
\vspace{0cm}
\begin{figure}
        \includegraphics[height=70mm] {./images/rinterface.png}
\end{figure}
\vspace{-5cm}
\hspace{-1cm} R Gui: OS X \\
\vspace{4.0cm}
\hspace{-1cm} Command-line R: Linux/OS X  \hspace{3cm} R Gui: Windows

\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}
	\frametitle{RStudio: Alternative Working Environment for R}
New integrated development environment (IDE) for R that works well for beginners and developers.
\vspace{0cm}
\begin{figure}
        \includegraphics[height=70mm] {./images/rstudio.png}
\end{figure}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{R Library Depositories}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}
	\frametitle{Package Depositories}
\vspace{0cm} 
\begin{itemize}
	\item CRAN ($>$4000 packages) general data analysis \href{http://cran.at.r-project.org/}{{\beamerbutton{Link}}}
	\item Bioconductor ($>$1000 packages) bioscience data analysis \href{http://www.bioconductor.org/}{{\beamerbutton{Link}}}
	\item Omegahat ($>$30 packages) programming interfaces \href{http://www.omegahat.org/}{{\beamerbutton{Link}}}
\end{itemize}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Installation}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}
	\frametitle{Installation of R and Add-on Packages}
\begin{enumerate}
	\item[] \hspace{-0.5cm}Install for your operating system from:
	\begin{itemize}
		\item[] http://cran.at.r-project.org \href{http://cran.at.r-project.org/}{{\beamerbutton{Link}}}
	\end{itemize}
	\vspace{0.3cm}
	\item[] \hspace{-0.5cm}Install RStudio from:
	\begin{itemize}
		\item[] http://www.rstudio.com/ide/download \href{http://www.rstudio.com/ide/download/}{{\beamerbutton{Link}}}
	\end{itemize}
	\vspace{0.3cm}
	\item[] \hspace{-0.5cm}Installation of CRAN Packages\\
	\texttt{\footnotesize{
		\hspace{-0.17cm}> install.packages(c("pkg1", "pkg2")) \\
		> install.packages("pkg.zip", repos=NULL) \\
	}}
	\vspace{0.3cm}
	\item[] \hspace{-0.5cm}Installation of Bioconductor Packages\\
	\texttt{\footnotesize{
	        \hspace{-0.17cm}> source("http://www.bioconductor.org/biocLite.R") \\
		> biocLite()\\
		> biocLite(c("pkg1", "pkg2"))\\
	}}
\end{enumerate}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Getting Around}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}
	\frametitle{Startup and Closing Behavior}
	\footnotesize
	\begin{itemize}
		\item[]\hspace{-1.2cm} \textcolor{blue}{Starting R}
		\item[] The R GUI versions, including RStudio, under Windows and Mac OS X can be opened by double-clicking their icons. Alternatively, one can start it by typing 'R' in a terminal (default under Linux). 
		\vspace{0.4cm}
		\item[]\hspace{-1.2cm} \textcolor{blue}{Startup/Closing Behavior}
		\item[] The R environment is controlled by hidden files in the startup directory: .RData, .Rhistory and .Rprofile (optional). \\ 
		\vspace{0.2cm}
	\texttt{\footnotesize{
	\hspace{-0.17cm}\#\# Closing R \\
		> q() \\ \vspace{0cm} 
		Save workspace image? [y/n/c]: \\ \vspace{0.2cm}
	}}
		\item[]\hspace{-1.2cm} \textcolor{blue}{Note}
		\item[] When responding with 'y', then the entire R workspace will be written to the .RData file which can become very large. Often it is sufficient to just save an analysis protocol in an R source file. This way one can quickly regenerate all data sets and objects. 
	\end{itemize}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{Getting Around}
\small
\textcolor{blue}{Create an object with the  assignment operator \texttt{<-} (or \texttt{=})}
<<label=Getting Around 1, eval=FALSE, echo=TRUE, keep.source=TRUE>>=
object <- ...
@
\textcolor{blue}{List objects in current R session}
<<label=Getting Around 2, eval=FALSE, echo=TRUE, keep.source=TRUE>>=
ls()
@
\textcolor{blue}{Return content of current working directory}
<<label=Getting Around 3, eval=FALSE, echo=TRUE, keep.source=TRUE>>=
dir()
@
\textcolor{blue}{Return path of current working directory}
<<label=Getting Around 4, eval=FALSE, echo=TRUE, keep.source=TRUE>>=
getwd()
@
\textcolor{blue}{Change current working directory}
<<label=Getting Around 5, eval=FALSE, echo=TRUE, keep.source=TRUE>>=
setwd("/home/user")
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Basic Syntax}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{Basic R Syntax}
\small
\textcolor{blue}{General R command syntax}
<<label=Basic Syntax 1, eval=FALSE, echo=TRUE, keep.source=TRUE>>=
object <- function_name(arguments) 
object <- object[arguments] 
@
\textcolor{blue}{Finding help}
<<label=Basic Syntax 2, eval=FALSE, echo=TRUE, keep.source=TRUE>>=
?function_name
@
\textcolor{blue}{Load a library}
<<label=Basic Syntax 3, eval=FALSE, echo=TRUE, keep.source=TRUE>>=
library("my_library") 
@
\textcolor{blue}{Lists all functions defined by a library}
<<label=Basic Syntax 4, eval=FALSE, echo=TRUE, keep.source=TRUE>>=
library(help="my_library")
@
\textcolor{blue}{Load library manual (PDF file)}
<<label=Basic Syntax 5, eval=FALSE, echo=TRUE, keep.source=TRUE>>=
vignette("my_library") 
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{Executing R Scripts}
\small
\textcolor{blue}{Execute an R script from within R}
<<label=Executing R Scripts, eval=FALSE, echo=TRUE, keep.source=TRUE>>=
source("my_script.R")
@
\textcolor{blue}{Execute an R script from command-line}
\begin{Schunk}
\begin{Sinput}
Rscript my_script.R
R CMD BATCH my_script.R 
R --slave < my_script.R 
\end{Sinput}
\end{Schunk}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Data Types and Subsetting}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{Data Types I}
\scriptsize
\textcolor{blue}{Numeric data: 1, 2, 3}
<<label=Data Types I 1, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
x <- c(1, 2, 3); x
is.numeric(x)
as.character(x)
@
\textcolor{blue}{Character data: "a", "b", "c"}
<<label=Data Types I 2, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
x <- c("1", "2", "3"); x
is.character(x)
as.numeric(x)
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{Data Types II}
\scriptsize
\textcolor{blue}{Complex data}
<<label=Data Types II 1, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
c(1, "b", 3)
@
\textcolor{blue}{Logical data}
<<label=Data Types II 2, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
x <- 1:10 < 5
x  
!x
which(x) # Returns index for the TRUE values in logical vector
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{Data Objects: Vectors and Factors}
\scriptsize
\textcolor{blue}{Vectors (1D)}
<<label=Data Objects I 1, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
myVec <- 1:10; names(myVec) <- letters[1:10]  
myVec[1:5]
myVec[c(2,4,6,8)]
myVec[c("b", "d", "f")]
@
\textcolor{blue}{Factors (1D): vectors with grouping information}
<<label=Data Objects I 2, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
factor(c("dog", "cat", "mouse", "dog", "dog", "cat"))
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{Data Objects: Matrices, Data Frames and Arrays}
\scriptsize
\textcolor{blue}{Matrices (2D): two dimensional structures with data of same type}
<<label=Data Objects II 1, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
myMA <- matrix(1:30, 3, 10, byrow = TRUE) 
class(myMA)
myMA[1:2,]
@
\textcolor{blue}{Data Frames (2D): two dimensional structures with variable data types}
<<label=Data Objects II 1, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
myDF <- data.frame(Col1=1:10, Col2=10:1) 
myDF[1:2, ]
@
\textcolor{blue}{Arrays: data structure with one, two or more dimensions}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{Data Objects: Lists and Functions}
\vspace{0.3cm}
\scriptsize
\textcolor{blue}{Lists: containers for any object type}
<<label=Data Objects III 1, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
myL <- list(name="Fred", wife="Mary", no.children=3, child.ages=c(4,7,9)) 
myL
myL[[4]][1:2] 
@
\textcolor{blue}{Functions: piece of code}
<<label=Data Objects III 2, eval=FALSE, echo=TRUE, keep.source=TRUE>>=
myfct <- function(arg1, arg2, ...) { 
	function_body 
}
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{General Subsetting Rules}
\vspace{0.4cm}
\scriptsize
\textcolor{blue}{Subsetting by positive or negative index/position numbers}
<<label=General Subsetting Rules 1, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
myVec <- 1:26; names(myVec) <- LETTERS 
myVec[1:4]
@	
\textcolor{blue}{Subsetting by same length logical vectors}
<<label=General Subsetting Rules 2, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
myLog <- myVec > 10
myVec[myLog] 
@	
\textcolor{blue}{Subsetting by field names}
<<label=General Subsetting Rules 3, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
myVec[c("B", "K", "M")]
@
\textcolor{blue}{Calling a single column or list component by its name with the \texttt{\$} sign}
<<label=General Subsetting Rules 4, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
iris$Species[1:8]
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Important Utilities}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{Combining Objects}
\vspace{0.4cm}
\scriptsize
\textcolor{blue}{The \texttt{c} function combines vectors and lists}
<<label=Basic Operators and Calculations 1, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
c(1, 2, 3)
x <- 1:3; y <- 101:103
c(x, y)
@ 
\textcolor{blue}{The cbind and rbind functions can be used to append columns and rows, respecively.}
<<label=Basic Operators and Calculations 1, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
ma <- cbind(x, y)
ma
rbind(ma, ma)
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{Accessing Name Slots and Dimensions of Objects}
\vspace{0.4cm}
\scriptsize
\textcolor{blue}{Length and dimension information of objects}
<<label=Basic Operators and Calculations 1, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
length(iris$Species)
dim(iris)
@ 
\textcolor{blue}{Accessing row and column names of 2D objects}
<<label=Basic Operators and Calculations 1, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
rownames(iris)[1:8]
colnames(iris)
@ 
\textcolor{blue}{Return name field of vectors and lists}
<<label=Basic Operators and Calculations 1, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
names(myVec)
names(myL)
@ 
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{Sorting Objects}
\vspace{0.4cm}
\scriptsize
\textcolor{blue}{The function \texttt{sort} returns a vector in ascending or descending order}
<<label=Basic Operators and Calculations 1, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
sort(10:1)
@ 
\textcolor{blue}{The function \texttt{order} returns a sorting index for sorting an object}
<<label=Basic Operators and Calculations 1, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
sortindex <- order(iris[,1], decreasing = FALSE)
sortindex[1:12]
iris[sortindex,][1:2,]
sortindex <- order(-iris[,1]) # Same as decreasing=TRUE
@
\textcolor{blue}{Sorting on multiple columns}
<<label=Basic Operators and Calculations 1, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
iris[order(iris$Sepal.Length, iris$Sepal.Width),][1:2,]
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Basic Calculations}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{Basic Operators and Calculations}
\vspace{0.4cm}
\scriptsize
\textcolor{blue}{Comparison operators: $==$, $!=$, $<$, $>$, $<=$, $>=$}
<<label=Basic Operators and Calculations 1, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
1==1
@ 
\textcolor{blue}{Logical operators: AND: $\&$, OR: $|$, NOT: $!$}
<<label=Basic Operators and Calculations 1, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
x <- 1:10; y <- 10:1
x > y & x > 5
@
\textcolor{blue}{Calculations: to look up math functions, see Function Index \href{http://cran.at.r-project.org/doc/manuals/R-intro.html\#Function-and-variable-index}{{\beamerbutton{Link}}}}
<<label=Basic Operators and Calculations 1, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
x + y
sum(x)
mean(x)
apply(iris[1:6,1:3], 1, mean) 
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Reading and Writing External Data}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{Reading and Writing External Data}
\scriptsize
\textcolor{blue}{Import data from tabular files into R}
<<label=Reading and Writing External Data 1, eval=FALSE, echo=TRUE, keep.source=TRUE>>=
myDF <- read.delim("myData.xls", sep="\t")
@
\textcolor{blue}{Export data from R to tabular files}
<<label=Reading and Writing External Data 2, eval=FALSE, echo=TRUE, keep.source=TRUE>>=
write.table(myDF, file="myfile.xls", sep="\t", quote=FALSE, col.names=NA)
@
\vspace{0.4cm}
\textcolor{blue}{Copy and paste (e.g. from Excel) into R}
<<label=Reading and Writing External Data 3, eval=FALSE, echo=TRUE, keep.source=TRUE>>=
## On Windows/Linux systems:
read.delim("clipboard") 
## On Mac OS X systems:
read.delim(pipe("pbpaste")) 
@
\textcolor{blue}{Copy and paste from R into Excel or other programs}
<<label=Reading and Writing External Data 4, eval=FALSE, echo=TRUE, keep.source=TRUE>>=
## On Windows/Linux systems:
write.table(iris, "clipboard", sep="\t", col.names=NA, quote=F) 
## On Mac OS X systems:
zz <- pipe('pbcopy', 'w')
write.table(iris, zz, sep="\t", col.names=NA, quote=F)
close(zz) 
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]  
	\frametitle{Homework 1: Object Subsetting Routines and Import/Export}
\scriptsize
\begin{itemize}
        \item[Task 1] Sort the rows of the \Robject{iris} data frame by its first column and sort its columns alphabetically by column names.
        \item[Task 2] Subset the first 12 rows, export the result to a text file and view it in Excel. 
        \item[Task 3] Change some column titles in Excel and import the result into R.  
        \item[]\hspace{-1.1cm} Structure of \Robject{iris} data set: 
\end{itemize}
<<Scatter Plot Exercise, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
class(iris)
dim(iris)
colnames(iris)
@
<<Homework 1, echo=FALSE, keep.source=FALSE>>=
irismod <- iris[order(iris[,1]), order(colnames(iris))]
irismod <- irismod[1:12,]
write.table(irismod, file="irismod.xls", sep="\t", quote=FALSE, row.names=FALSE)
irisimport <- read.delim(file="irismod.xls", sep="\t")
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Some Great R Functions}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{Some Great R Functions I}
\scriptsize
\textcolor{blue}{The \textcolor{red}{\texttt{unique()}} function to make vector entries unique}
<<label=Great R Functions 1, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
length(iris$Sepal.Length)
length(unique(iris$Sepal.Length))
@
\textcolor{blue}{The \textcolor{red}{\texttt{table()}} function counts the occurrences of entries}
<<label=Great R Functions 2, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
table(iris$Species)
@
\textcolor{blue}{The \textcolor{red}{\texttt{aggregate()}} function computes statistics of data aggregates}
<<label=Great R Functions 3, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
aggregate(iris[,1:4], by=list(iris$Species), FUN=mean, na.rm=TRUE)
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{Some Great R Functions II}
\vspace{0.4cm}
\scriptsize
\textcolor{blue}{The  \textcolor{red}{\texttt{\%in\%}} function returns the intersect between two vectors}
<<label=Great R Functions 4, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
month.name %in% c("May", "July")
@
\textcolor{blue}{The  \textcolor{red}{\texttt{merge()}} function joins two data frames by common field entries, here row names (\texttt{by.x=0}). To obtain only the common rows, change \texttt{all=TRUE} to \texttt{all=FALSE}. To merge on specific columns, refer to them by their position numbers or their column names.}
<<label=Great R Functions 5, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
frame1 <- iris[sample(1:length(iris[,1]), 30), ]
frame1[1:2,]
dim(frame1)
my_result <- merge(frame1, iris, by.x = 0, by.y = 0, all = TRUE)
dim(my_result)
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Graphics Utilities}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]  
	\frametitle{Graphics in R}
\begin{itemize}
        \item Powerful environment for visualizing scientific data
        \item Integrated graphics and statistics infrastructure
        \item Publication quality graphics
        \item Fully programmable 
        \item Highly reproducible
	\item Full \LaTeX\ \href{http://www.latex-project.org/}{{\beamerbutton{Link}}} \& Sweave \href{http://www.stat.auckland.ac.nz/~dscott/782/Sweave-manual-20060104.pdf}{{\beamerbutton{Link}}} support
        \item Vast number of R packages with graphics utilities
\end{itemize}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]  
	\frametitle{Documentation on Graphics in R}
\begin{itemize}
        \item[] \hspace{-0.8cm} \textcolor{blue}{General}
        \item Graphics Task Page \href{http://cran.r-project.org/web/views/Graphics.html}{{\beamerbutton{Link}}} 
        \item R Graph Gallery \href{http://addictedtor.free.fr/graphiques/allgraph.php}{{\beamerbutton{Link}}}
        \item R Graphical Manual \href{http://cged.genes.nig.ac.jp/RGM2/index.php}{{\beamerbutton{Link}}}
        \item Paul Murrell's book R (Grid) Graphics \href{http://www.stat.auckland.ac.nz/~paul/RGraphics/rgraphics.html}{{\beamerbutton{Link}}}
\end{itemize}

\begin{itemize}
        \item[] \hspace{-0.8cm} \textcolor{blue}{Interactive graphics}
        \item rggobi (GGobi) \href{http://www.ggobi.org/}{{\beamerbutton{Link}}}
        \item iplots \href{http://www.rosuda.org/iplots/}{{\beamerbutton{Link}}}
        \item Open GL (rgl) \href{http://rgl.neoscientists.org/gallery.shtml}{{\beamerbutton{Link}}}
\end{itemize}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]  
	\frametitle{Graphics Environments}
\begin{itemize}
        \item[] \hspace{-0.8cm} \textcolor{blue}{Viewing and saving graphics in R}
        \item On-screen graphics
        \item postscript, pdf, svg
        \item jpeg, png, wmf, tiff, ...
\end{itemize}
\begin{itemize}
        \item[] \hspace{-0.8cm} \textcolor{blue}{Four major graphic environments}
        \item Low-level infrastructure
        \begin{itemize}
                \item R Base Graphics (low- and high-level)
                \item \Rpackage{grid}: Manual \href{http://www.stat.auckland.ac.nz/~paul/grid/grid.html}{{\beamerbutton{Link}}}, Book \href{http://www.stat.auckland.ac.nz/~paul/RGraphics/rgraphics.html}{{\beamerbutton{Link}}}
        \end{itemize}
        \item High-level infrastructure
        \begin{itemize}
                \item \Rpackage{lattice:} Manual \href{http://lmdvr.r-forge.r-project.org}{{\beamerbutton{Link}}}, Intro \href{http://www.his.sunderland.ac.uk/~cs0her/Statistics/UsingLatticeGraphicsInR.htm}{{\beamerbutton{Link}}}, Book \href{http://www.amazon.com/Lattice-Multivariate-Data-Visualization-Use/dp/0387759689}{{\beamerbutton{Link}}} 
                \item \Rpackage{ggplot2:} Manual \href{http://had.co.nz/ggplot2/}{{\beamerbutton{Link}}}, Intro \href{http://www.ling.upenn.edu/~joseff/rstudy/summer2010_ggplot2_intro.html}{{\beamerbutton{Link}}}, Book \href{http://had.co.nz/ggplot2/book/}{{\beamerbutton{Link}}} 
        \end{itemize}
\end{itemize}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% slide %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Graphics Environments}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% slide %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Base Graphics}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]  
	\frametitle{Base Graphics: Overview}
\begin{itemize}
        \footnotesize
        \item[] \hspace{-0.8cm} \textcolor{blue}{Important high-level plotting functions}
        \item \Rfunction{plot}: generic x-y plotting
        \item \Rfunction{barplot}: bar plots
        \item \Rfunction{boxplot}: box-and-whisker plot
        \item \Rfunction{hist}: histograms
        \item \Rfunction{pie}: pie charts
        \item \Rfunction{dotchart}: cleveland dot plots
        \item \Rfunction{image, heatmap, contour, persp}: functions to generate image-like plots
        \item \Rfunction{qqnorm, qqline, qqplot}: distribution comparison plots
        \item \Rfunction{pairs, coplot}: display of multivariant data
        \item[] \hspace{-0.8cm} \textcolor{blue}{Help on these functions}
        \item \Rfunction{?myfct}
        \item \Rfunction{?plot}
        \item \Rfunction{?par} 
\end{itemize}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]  
	\frametitle{Base Graphics: Preferred Input Data Objects}
\begin{itemize}
        \footnotesize
        \item Matrices and data frames
        \item Vectors
        \item Named vectors
\end{itemize}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]  
	\frametitle{Scatter Plot: very basic}
\vspace{0.4cm}
\scriptsize
\textcolor{blue}{Sample data set for subsequent plots}
<<eval=TRUE, echo=TRUE, keep.source=TRUE>>=
set.seed(1410)
y <- matrix(runif(30), ncol=3, dimnames=list(letters[1:10], LETTERS[1:3]))
@
\begin{figure}
  \centering
<<fig=true, width=6, height=4, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
plot(y[,1], y[,2]) 
@
%\caption{Here goes the caption.}
\label{fig:base_scatter}
\end{figure}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]  
	\frametitle{Scatter Plot: all pairs}
\scriptsize
%<<echo=FALSE>>=
%options(width=70)
%@
\begin{figure}
  \centering
<<fig=true, width=6, height=5.5, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
pairs(y) 
@
%\caption{Here goes the caption.}
\label{fig:base_scatter_all}
\end{figure}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]  
	\frametitle{Scatter Plot: with labels}
\scriptsize
\begin{figure}
  \centering
<<fig=true, width=6, height=5, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
plot(y[,1], y[,2], pch=20, col="red", main="Symbols and Labels")
text(y[,1]+0.03, y[,2], rownames(y))
@
%\caption{Here goes the caption.}
\label{fig:base_scatter_lab}
\end{figure}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]  
	\frametitle{Scatter Plots: more examples}
\scriptsize
\textcolor{blue}{Print instead of symbols the row names}
<<Show labels, eval=FALSE, echo=TRUE>>=
plot(y[,1], y[,2], type="n", main="Plot of Labels")
text(y[,1], y[,2], rownames(y)) 
@
\textcolor{blue}{Usage of important plotting parameters}
<<Plotting parameters, eval=FALSE, echo=TRUE>>=
grid(5, 5, lwd = 2) 
op <- par(mar=c(8,8,8,8), bg="lightblue")
plot(y[,1], y[,2], type="p", col="red", cex.lab=1.2, cex.axis=1.2, 
     cex.main=1.2, cex.sub=1, lwd=4, pch=20, xlab="x label", 
     ylab="y label", main="My Main", sub="My Sub")
par(op)
@
\begin{itemize}
\scriptsize
        \item[] \hspace{-0.8cm}\textcolor{blue}{Important arguments}
        \item \Rfunarg{mar}: specifies the margin sizes around the plotting area in order: \Rfunction{c(bottom, left, top, right)} 
        \item \Rfunarg{col}: color of symbols
        \item \Rfunarg{pch}: type of symbols, samples: \Rfunction{example(points)}
        \item \Rfunarg{lwd}: size of symbols
        \item \Rfunarg{cex.*}: control font sizes
        \item For details see \Rfunction{?par}
\end{itemize}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]  
	\frametitle{Scatter Plots: more examples}
\scriptsize
\textcolor{blue}{Add a regression line to a plot}
<<Regression line, eval=FALSE, echo=TRUE>>=
plot(y[,1], y[,2])
myline <- lm(y[,2]~y[,1]); abline(myline, lwd=2) 
summary(myline) 
@
\textcolor{blue}{Same plot as above, but on log scale}
<<Log scale, eval=FALSE, echo=TRUE>>=
plot(y[,1], y[,2], log="xy") 
@
\textcolor{blue}{Add a mathematical expression to a plot}
<<Math expression, eval=FALSE, echo=TRUE>>=
plot(y[,1], y[,2]); text(y[1,1], y[1,2], 
     expression(sum(frac(1,sqrt(x^2*pi)))), cex=1.3) 
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]  
	\frametitle{Homework 2: Scatter Plots}
\scriptsize
\begin{itemize}
        \item[Task 1] Generate scatter plot for first two columns in \Rfunction{iris} data frame and color dots by its \Rfunction{Species} column.
        \item[Task 2] Use the \Rfunarg{xlim/ylim} arguments to set limits on the x- and y-axes so that all data points are restricted to the left bottom quadrant of the plot. 
        \item[]\hspace{-1.1cm} Structure of iris data set:
\end{itemize}
<<Scatter Plot Exercise, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
class(iris)
iris[1:4,]
table(iris$Species)
@
<<Homework 2, echo=FALSE, keep.source=FALSE>>=
plot(iris[,1], iris[,2], col=iris$Species, lwd=2, pch=19)
plot(iris[,1], iris[,2], col=iris$Species, lwd=2, pch=19, xlim=c(4,16), ylim=c(2,8))
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]  
	\frametitle{Line Plot: Single Data Set}
\scriptsize
%Plots a simple line graph.
\begin{figure}
  \centering
<<fig=TRUE, width=6, height=4, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
plot(y[,1], type="l", lwd=2, col="blue") 
@
%\caption{Here goes the caption.}
\label{fig:line_plot}
\end{figure}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]  
	\frametitle{Line Plots: Many Data Sets}
\scriptsize
%Plots line graph for all columns in data frame \Rfunction{y}. The \Rfunction{split.screen} function is used in this example in a for loop to overlay several line graphs in the same plot. 
\tiny
\begin{figure}
  \centering
<<fig=TRUE, width=6, height=4, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
split.screen(c(1,1)); 
plot(y[,1], ylim=c(0,1), xlab="Measurement", ylab="Intensity", type="l", lwd=2, col=1)
for(i in 2:length(y[1,])) { 
	screen(1, new=FALSE)
	plot(y[,i], ylim=c(0,1), type="l", lwd=2, col=i, xaxt="n", yaxt="n", ylab="", 
             xlab="", main="", bty="n") 
}
close.screen(all=TRUE) 
@
%\caption{Here goes the caption.}
\label{fig:line_plot_many}
\end{figure}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]  
	\frametitle{Bar Plot Basics}
\scriptsize
\begin{figure}
  \centering
<<fig=TRUE, width=6, height=5, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
barplot(y[1:4,], ylim=c(0, max(y[1:4,])+0.3), beside=TRUE, 
        legend=letters[1:4]) 
text(labels=round(as.vector(as.matrix(y[1:4,])),2), x=seq(1.5, 13, by=1)
     +sort(rep(c(0,1,2), 4)), y=as.vector(as.matrix(y[1:4,]))+0.04) 
@
%\caption{Here goes the caption.}
\label{fig:bar_plot1}
\end{figure}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]  
	\frametitle{Bar Plots with Error Bars}
\scriptsize
\begin{figure}
  \centering
<<fig=TRUE, width=6, height=5, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
bar <- barplot(m <- rowMeans(y) * 10, ylim=c(0, 10))
stdev <- sd(t(y))
arrows(bar, m, bar, m + stdev, length=0.15, angle = 90)
@
%\caption{Here goes the caption.}
\label{ig:bar_plot2}
\end{figure}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]  
	\frametitle{Histograms}
\scriptsize
\begin{figure}
  \centering
<<fig=TRUE, width=6, height=5, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
hist(y, freq=TRUE, breaks=10)
@
%\caption{Here goes the caption.}
\label{fig:hist}
\end{figure}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]  
	\frametitle{Density Plots}
\scriptsize
\begin{figure}
  \centering
<<fig=TRUE, width=6, height=5, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
plot(density(y), col="red")
@
%\caption{Here goes the caption.}
\label{fig:dens}
\end{figure}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]  
	\frametitle{Pie Charts}
\scriptsize
\begin{figure}
  \centering
<<fig=TRUE, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
pie(y[,1], col=rainbow(length(y[,1]), start=0.1, end=0.8), clockwise=TRUE)
legend("topright", legend=row.names(y), cex=1.3, bty="n", pch=15, pt.cex=1.8, 
col=rainbow(length(y[,1]), start=0.1, end=0.8), ncol=1) 
@
%\caption{Here goes the caption.}
\label{fig:pie}
\end{figure}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]  
	\frametitle{Color Selection Utilities}
\scriptsize
\textcolor{blue}{Default color palette and how to change it}
<<Palette, eval=TRUE, echo=TRUE>>=
palette()
palette(rainbow(5, start=0.1, end=0.2))
palette()
palette("default")
@
\textcolor{blue}{The \Rfunction{gray} function allows to select any type of gray shades by providing values from 0 to 1}
<<Grays, eval=TRUE, echo=TRUE>>=
gray(seq(0.1, 1, by= 0.2))
@
\textcolor{blue}{Color gradients with \Rfunction{colorpanel} function from \Rpackage{gplots} library}
<<Gradients, eval=FALSE, echo=TRUE>>=
library(gplots)
colorpanel(5, "darkblue", "yellow", "white")
@
Much more on colors in R see Earl Glynn's color chart \href{http://research.stowers-institute.org/efg/R/Color/Chart/}{{\beamerbutton{Link}}} 
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]  
	\frametitle{Saving Graphics to Files}
\scriptsize
\textcolor{blue}{After the \Rfunction{pdf()} command all graphs are redirected to file \Rfunction{test.pdf}. Works for all common formats similarly: jpeg, png, ps, tiff, ...}
<<file, eval=FALSE, echo=TRUE>>=
pdf("test.pdf"); plot(1:10, 1:10); dev.off() 
@
\textcolor{blue}{Generates Scalable Vector Graphics (SVG) files that can be edited in vector graphics programs, such as InkScape.}
<<file, eval=FALSE, echo=TRUE>>=
library("RSvgDevice"); devSVG("test.svg"); plot(1:10, 1:10); dev.off() 
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]  
	\frametitle{Homework 3: Bar Plots}
\scriptsize
\begin{itemize}
        \item[Task 1] Calculate the mean values for the \Rfunction{Species} components of the first four columns in the \Rfunction{iris} data set. Organize the results in a matrix where the row names are the unique values from the \Rfunction{iris Species} column and the column names are the same as in the first four \Rfunction{iris} columns. 
        \item[Task 2] Generate two bar plots: one with stacked bars and one with horizontally arranged bars. 
        \item[]\hspace{-1.1cm} Structure of iris data set:
\end{itemize}
<<Bar Plot Exercise, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
class(iris)
iris[1:4,]
table(iris$Species)
@
<<Homework 3, echo=FALSE, keep.source=FALSE>>=
mMA <- sapply(colnames(iris[,1:4]), function(x) tapply(iris[,x], iris[,5], mean))
barplot(mMA, beside=FALSE, legend=rownames(mMA))
barplot(mMA, beside=TRUE, legend=rownames(mMA))
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Analysis Routine}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{Analysis Routine: Overview}
\begin{itemize}
	\item The following exercise introduces a variety of useful data analysis utilities in R. 
\end{itemize}
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{Analysis Routine: Data Import}
\scriptsize
\begin{itemize}
	\item[Step 1] To get started with this exercise, direct your R session to a dedicated workshop directory and download into this directory the following sample tables. Then import the files into Excel and save them as tab delimited text files.
	\begin{itemize}
	\scriptsize
		\item \Robject{MolecularWeight\_tair7.xls} \href{http://faculty.ucr.edu/~tgirke/Documents/R_BioCond/Samples/MolecularWeight_tair7.xls}{{\beamerbutton{Link}}} 
		\item \Robject{TargetP\_analysis\_tair7.xls} \href{http://faculty.ucr.edu/~tgirke/Documents/R_BioCond/Samples/TargetP_analysis_tair7.xls}{{\beamerbutton{Link}}}
	\end{itemize}
\end{itemize}
\textcolor{blue}{Import the tables into R}
<<label=Exercise 4.1, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
## Import molecular weight table
my_mw <- read.delim(file="MolecularWeight_tair7.xls", header=T, sep="\t") 
my_mw[1:2,]
## Import subcelluar targeting table
my_target <- read.delim(file="TargetP_analysis_tair7.xls", header=T, sep="\t") 
my_target[1:2,]
@ 
<<label=Exercise 4.2, eval=FALSE, echo=FALSE, keep.source=TRUE>>=
## Online import of molecular weight table
my_mw <- read.delim(file="http://faculty.ucr.edu/~tgirke/Documents/R_BioCond/Samples/MolecularWeight_tair7.xls", header=T, sep="\t") 
## Online import of subcelluar targeting table
my_target <- read.delim(file="http://faculty.ucr.edu/~tgirke/Documents/R_BioCond/Samples/TargetP_analysis_tair7.xls", header=T, sep="\t") 
@ 
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{Analysis Routine: Merging Data Frames}
\scriptsize
\begin{itemize}
	\item[Step 2] Assign uniform gene ID column titles
\end{itemize}
<<label=Exercise 4.3, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
colnames(my_target)[1] <- "ID"
colnames(my_mw)[1] <- "ID" 
@
\begin{itemize}
	\item[Step 3] Merge the two tables based on common ID field
\end{itemize}
<<label=Exercise 4.4, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
my_mw_target <- merge(my_mw, my_target, by.x="ID", by.y="ID", all.x=T)
@
\begin{itemize}
	\item[Step 4] Shorten one table before the merge and then remove the non-matching rows (NAs) in the merged file
\end{itemize}
<<label=Exercise 4.5, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
my_mw_target2a <- merge(my_mw, my_target[1:40,], by.x="ID", by.y="ID", all.x=T) 
   # To remove non-matching rows, use the argument setting 'all=F'.
my_mw_target2 <- na.omit(my_mw_target2a) 
   # Removes rows containing "NAs" (non-matching rows).
@
\begin{itemize}
	\item[] \hspace{-0.9cm}\textcolor{red}{Homework 4:} How can the merge function in the previous step be executed so that only the common rows among the two data frames are returned? Prove that both methods - the two step version with \Rfunction{na.omit} and your method - return identical results. \\ 
	\item[] \hspace{-0.9cm}\textcolor{red}{Homework 5:} Replace all \Robject{NAs} in the data frame \Robject{my\_mw\_target2a} with zeros.
\end{itemize}
<<label=Homework 4 and 5, eval=FALSE, echo=FALSE, keep.source=TRUE>>=
my_mw_target_tmp <- merge(my_mw, my_target[1:40,], by.x="ID", by.y="ID", all=FALSE) 
all(my_mw_target2 == my_mw_target_tmp)
my_mw_target2a <- as.matrix(my_mw_target2a)
my_mw_target2a[is.na(my_mw_target2a)] <- 0
my_mw_target2a <- as.data.frame(my_mw_target2a)
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{Analysis Routine: Filtering Data}
\scriptsize
\begin{itemize}
	\item[Step 5] Retrieve all records with a value of greater than 100,000 in 'MW' column and 'C' value in 'Loc' column (targeted to chloroplast).
\end{itemize}
<<label=Exercise 4.7, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
query <- my_mw_target[my_mw_target[, 2] > 100000 & my_mw_target[, 4] == "C", ] 
query[1:4, ]
dim(query)
@
\begin{itemize}
	\item[] \hspace{-0.9cm}\textcolor{red}{Homework 6:} How many protein entries in the \Robject{my\_mw\_target} data frame have a MW of greater then 4,000 and less then 5,000. Subset the data frame accordingly and sort it by MW to check that your result is correct.
\end{itemize}
<<label=Homework 6, eval=FALSE, echo=FALSE, keep.source=TRUE>>=
query2 <- my_mw_target[my_mw_target[, 2] > 4000 & my_mw_target[, 2] < 5000, ] 
dim(query2)
query2[order(query2[,2]),] 
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{Analysis Routine: String Substitutions}
\scriptsize
\begin{itemize}
	\item[Step 6] Use a regular expression in a substitute function to generate a separate ID column that lacks the gene model extensions.
\end{itemize}
<<label=Exercise 4.7, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
my_mw_target3 <- data.frame(loci=gsub("\\..*", "", 
                            as.character(my_mw_target[,1]), perl = TRUE), 
                            my_mw_target)
my_mw_target3[1:3,1:8]
@
\begin{itemize}
	\item[] \hspace{-0.9cm}\textcolor{red}{Homework 7:} Retrieve those rows in \Robject{my\_mw\_target3} where the second column contains the following identifiers: \Robject{c("AT5G52930.1", "AT4G18950.1", "AT1G15385.1", "AT4G36500.1", "AT1G67530.1")}. Use the \Robject{\%in\%} function for this query. As an alternative approach, assign the second column to the row index of the data frame and then perform the same query again using the row index. Explain the difference of the two methods.
\end{itemize}
<<label=Homework 7, eval=FALSE, echo=FALSE, keep.source=TRUE>>=
index <- my_mw_target3[,2] %in%  c("AT5G52930.1", "AT4G18950.1", "AT1G15385.1", "AT4G36500.1", "AT1G67530.1")
my_mw_target3[index, ]
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{Analysis Routine: Calculations on Data Frames}
\scriptsize
\begin{itemize}
	\item[Step 7] Count the number of duplicates in the loci column with the \Robject{table} function and append the result to the data frame with the \Robject{cbind} function.
\end{itemize}
<<label=Exercise 4.9, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
mycounts <- table(my_mw_target3[,1])[my_mw_target3[,1]]
my_mw_target4 <- cbind(my_mw_target3, Freq=mycounts[as.character(my_mw_target3[,1])]) 
@
\begin{itemize}
	\item[Step 8] Perform a vectorized devision of columns 3 and 4 (average AA weight per protein)
\end{itemize}
<<label=Exercise 4.10, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
data.frame(my_mw_target4, avg_AA_WT=(my_mw_target4[,3] / my_mw_target4[,4]))[1:2,5:11] 
@
\begin{itemize}
	\item[Step 9] Calculate for each row the mean and standard deviation across several columns
\end{itemize}
<<label=Exercise 4.11, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
mymean <- apply(my_mw_target4[,6:9], 1, mean)
mystdev <- apply(my_mw_target4[,6:9], 1, sd, na.rm=TRUE)
data.frame(my_mw_target4, mean=mymean, stdev=mystdev)[1:2,5:12] 
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{Analysis Routine: Plotting Example}
\scriptsize
\begin{itemize}
	\item[Step 10] Generate scatter plot columns: 'MW' and 'Residues' 
\end{itemize}
<<fig=TRUE, width=6, height=5, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
plot(my_mw_target4[1:500,3:4], col="red")
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]
	\frametitle{Analysis Routine: Export Results and Run Entire Exercise as Script}
\scriptsize
\begin{itemize}
	\item[Step 11] Write the data frame \Robject{my\_mw\_target4} into a tab-delimited text file and inspect it in Excel.
\end{itemize}
<<label=Exercise 4.13, eval=TRUE, echo=TRUE, keep.source=TRUE>>=
write.table(my_mw_target4, file="my_file.xls", quote=F, sep="\t", 
            col.names = NA) 
@
\begin{itemize}
	\item[] \hspace{-0.9cm}\textcolor{red}{Homework 8:} Write all commands from this exercise into an R script named \Robject{exerciseRbasics.R}, or download it from here \href{http://faculty.ucr.edu/~tgirke/Documents/R_BioCond/My_R_Scripts/exerciseRbasics.R}{{\beamerbutton{Link}}}. Then execute the script with the \Rfunction{source} function like this: \Rfunction{source("exerciseRbasics.R")}. This will run all commands of this exercise and generate the corresponding output files in the current working directory.
\end{itemize}
<<label=Homework 8, eval=FALSE, echo=FALSE, keep.source=TRUE>>=
source("exerciseRbasics.R")
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{frame}[containsverbatim]  
	\frametitle{Session Information}
\tiny
<<eval=TRUE, echo=TRUE, keep.source=TRUE>>=
sessionInfo()
@
\end{frame}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%\section{Bibliography}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Biography sample. To cite in text, use \cite{Horan2008a}
%\tiny
%\begin{thebibliography}{9}
%\expandafter\ifx\csname natexlab\endcsname\relax\def\natexlab#1{#1}\fi
%\expandafter\ifx\csname url\endcsname\relax
%  \def\url#1{\texttt{#1}}\fi
%\expandafter\ifx\csname urlprefix\endcsname\relax\def\urlprefix{URL }\fi
%
%\bibitem[{Kuhlman et al 2008}]{Kuhlman2003a}
%Kuhlman B, Dantas G, Ireton GC, Varani G, Stoddard BL, Baker D (2003) {Design of a novel globular protein fold with atomic-level accuracy}.  Science 302: 1364-1368.
%\newline\urlprefix\url{http://www.hubmed.org/display.cgi?uids=14631033}
%\end{thebibliography}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% SLIDE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\end{document}

